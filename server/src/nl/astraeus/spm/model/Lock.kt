package nl.astraeus.spm.model

import nl.astraeus.database.SimpleDao
import nl.astraeus.database.annotations.Cache
import nl.astraeus.database.annotations.Id
import nl.astraeus.database.annotations.IdType
import nl.astraeus.database.annotations.Table
import nl.astraeus.database.transaction

/**
 * User: rnentjes
 * Date: 20-11-16
 * Time: 12:54
 */

@Table(name = "lock")
@Cache(maxSize = 5000)
data class Lock(
  @Id(IdType.AUTOGENERATED) var id: Long = 0,
  var user: String,
  var wsId: Long,
  var locked: Boolean
) {
    constructor(): this(0, "", 0, false)

    constructor(user: String, wsId: Long, locked: Boolean): this(0, user, wsId, locked)
}

object LockDao: SimpleDao<Lock>(Lock::class.java) {

    fun findByUser(user: String) = where("user = ? order by wsId", user)

    fun findByUserAndId(user: String, id: Long) = find("user = ? AND wsId = ?", user, id)

    fun emptyRows() {
        transaction {
            for (lock in all()) {
                delete(lock)
            }
        }
    }

    fun findAll() = where("1=1")

}
